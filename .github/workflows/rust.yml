name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test for ${{ matrix.os}}
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
    strategy:
      matrix:
        include:
          ## Linux builds
          - os: ubuntu-latest

          ## macOS builds
          - os: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Linux test dependencies
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb xclip
    - name: Setup Bats and bats libs
      id: setup-bats
      uses: bats-core/bats-action@3.0.1
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

    - name: Run bats test on Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        bats test/bats/x
        bats test/bats/loopback
      shell: bash
      env:
        BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
        TERM: xterm

    - name: Run bats test on MacOS
      if: contains(matrix.os, 'macos')
      run: |
        bats test/bats/mac
      shell: bash
      env:
        BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
        TERM: xterm
